version: 2.1
orbs:
  python: circleci/python@1.2
jobs:
  lint:
    docker:
    - image: cimg/python:3.9
    steps:
    - checkout
    - python/install-packages:
        pkg-manager: poetry
    - run:
        name: Run linters
        command: poetry run prospector . -s veryhigh
  static-analysis:
    docker:
    - image: cimg/python:3.9
    steps:
    - checkout
    - python/install-packages:
        pkg-manager: poetry
    - run:
        name: Run mypy
        command: poetry run mypy sarada tests
  doctest:
    docker:
    - image: cimg/python:3.9
    steps:
    - checkout
    - python/install-packages:
        pkg-manager: poetry
    - run:
        name: Run doctests
        command: poetry run pytest --verbose --junitxml=test-results/junit.xml sarada
    - store_test_results:
        path: test-results
  test:
    parallelism: 2
    docker:
    - image: cimg/python:3.9
    steps:
    - checkout
    - python/install-packages:
        pkg-manager: poetry
    - run:
        name: Run tests
        command: |
          set -e
          TEST_FILES=$(circleci tests glob "tests/**/test_*.py" | circleci tests split --split-by=timings)
          mkdir -p test-results
          poetry run pytest --verbose --junitxml=test-results/junit.xml $TEST_FILES
    - store_test_results:
        path: test-results
  build:
    docker:
    - image: cimg/python:3.9
    steps:
    - checkout
    - python/install-packages:
        pkg-manager: poetry
    - run:
        name: Build
        command: poetry build
    - store_artifacts:
        path: "dist/"
workflows:
  test:
    jobs:
    - lint
    - static-analysis
    - test
    - doctest
  build:
    jobs:
    - lint:
        filters: &filters
          branches:
            ignore: /.*/
          tags:
            only: /.*/
    - static-analysis:
        filters:
          <<: *filters
    - test:
        filters:
          <<: *filters
    - doctest:
        filters:
          <<: *filters
    - build:
        requires:
        - doctest
        - lint
        - test
        - static-analysis
        filters:
          <<: *filters
